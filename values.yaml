image:
  registry: docker.io
  repository: bitnami/mongodb
  tag: 4.2.8-debian-10-r20
  pullPolicy: IfNotPresent
  debug: false

serviceAccount:
  create: true
  name:

volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always
  resources: {}

usePassword: true
existingSecret: mongo-mongodb
mongodbUsername: ivan
mongodbDatabase: challengesdb
mongodbEnableIPv6: false
mongodbDirectoryPerDB: false
mongodbSystemLogVerbosity: 0
mongodbDisableSystemLog: false

mongodbExtraFlags: []

securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

clusterDomain: cluster.local

service:
  annotations: {}
  type: LoadBalancer
  port: 27017
  nodePort: 30123
  loadBalancerIP: 35.228.64.115
  # loadBalancerSourceRanges: []

# extraEnvVars:

useStatefulSet: false

replicaSet:
  enabled: false
  useHostnames: true
  name: rs0
  replicas:
    secondary: 1
    arbiter: 1
  pdb:
    enabled: true
    minAvailable:
      primary: 1
      secondary: 1
      arbiter: 1

annotations: {}
labels: {}
podAnnotations: {}
podLabels: {}

resources:
   requests:
     cpu: 100m
     memory: 800Mi

resourcesArbiter: {}
nodeSelector: {}
nodeSelectorSecondary: {}
nodeSelectorArbiter: {}
affinity: {}
affinityArbiter: {}
tolerations: {}
updateStrategy:
  type: Recreate
sidecars: []
extraVolumes: []
extraVolumeMounts: []
sidecarsArbiter: []
extraVolumesArbiter: []
extraVolumeMountsArbiter: []

persistence:
  enabled: true
  mountPath: /bitnami/mongodb
  subPath: ""
  storageClass: mongo-xfs
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  annotations: {}

ingress:
  enabled: false
  certManager: false
  annotations:
  hosts:
    - name: mongodb.local
      path: /
  tls:
    - hosts:
        - mongodb.local
      secretName: mongodb.local-tls
  secrets:

livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

initConfigMap: {}

configmap:
  # where and how to store data.
  storage:
    dbPath: /bitnami/mongodb/data/db
    journal:
      enabled: true
      commitIntervalMs: 200
    directoryPerDB: false
    engine: wiredTiger
    wiredTiger:
      engineConfig:
        cacheSizeGB: 0.9
        journalCompressor: zstd
        directoryForIndexes: false
        maxCacheOverflowFileSizeGB: 0
      collectionConfig:
        blockCompressor: zstd
      indexConfig:
        prefixCompression: true
    inMemory:
      engineConfig:
        inMemorySizeGB: 0.9
  # where to write logging data.
  systemLog:
    destination: file
    quiet: false
    logAppend: false
    logRotate: rename
    path: /opt/bitnami/mongodb/logs/mongodb.log
    verbosity: 0
  # network interfaces
  net:
    port: 27017
    compression:
      compressors: zstd
    unixDomainSocket:
      enabled: true
      pathPrefix: /opt/bitnami/mongodb/tmp
    ipv6: false
    bindIpAll: true
  # process management options
  processManagement:
     fork: false
     pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
  # set parameter options
  setParameter:
     enableLocalhostAuthBypass: true
  # security options
  security:
    authorization: enabled
    #keyFile: /opt/bitnami/mongodb/conf/keyfile

metrics:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.11.0-debian-10-r58
    pullPolicy: IfNotPresent
  extraArgs: ""
  livenessProbe:
    enabled: false
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9216"
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    alerting:
      rules: {}
      additionalLabels: {}
